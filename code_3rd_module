// SPDX-License-Identifier: MIT

pragma solidity ^0.8.26;

import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol";

contract myMintToken is ERC20 {
    address public admin;

    constructor() ERC20("ANANYATOKEN", "AT") {
        admin = msg.sender;
    }

    // Mint tokens, only the admin can mint
    function mint(address to, uint256 amount) external {
        require(msg.sender == admin, "Only admin can mint tokens");
        _mint(to, amount);
    }

    // Burn tokens, any user can burn their own tokens
    function burn(uint256 amount) external {
        _burn(msg.sender, amount);
    }

    // Get the balance of an address
    function balanceOfAddress(address account) external view returns (uint256) {
        return balanceOf(account);
    }

    // Transfer tokens to another address
    function transferTokens(address recipient, uint256 amount) external {
        _transfer(msg.sender, recipient, amount);
    }
}
